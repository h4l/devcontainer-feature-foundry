name: "Build the Solidity Compiler (solc) for multiple CPU architectures"
on:
  push:
    branches:
      - solc-arm-cross

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build & Publish
    runs-on: ubuntu-latest
    permissions:
      packages: write
      # Required for Cosign to create ephemeral credentials from the runner's
      # GitHub OIDC Token.
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.0.3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        id: bake
        uses: docker/bake-action@v3
        env:
          TAG_PREFIX: ${{ env.REGISTRY }}/${{ github.repository }}
          TAG_VERSION: workinprogress-0.8.20
        with:
          workdir: src/solc
          files: docker-bake.hcl
          provenance: true
          targets: cosign
          sbom: true
          push: true
      - name: Sign container images with Sigstore Cosign
        run: |
          set -xeuo pipefail
          echo "${{ steps.bake.outputs.metadata }}" > bake-meta1.json
          echo "${{ toJSON(steps.bake.outputs.metadata) }}" > bake-meta2.json
          head bake-meta1.json
          head bake-meta2.json
          jq < bake-meta2.json -er '
            .[]
            | select(.["image.name"]? and .["containerimage.digest"]?)
            | "\(.["image.name"])@\(.["containerimage.digest"])"
          ' | tee \
          | xargs -I{} cosign sign --recursive {}
